{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isAccessorArray from '@stdlib/array-base-assert-is-accessor-array';\nimport resolveGetter from '@stdlib/array-base-resolve-getter';\nimport hasProp from '@stdlib/assert-has-property';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether at least one element in a provided indexed array has a specified property, either own or inherited.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {(string|symbol)} prop - property\n* @returns {boolean} result\n*\n* @example\n* var o1 = {\n*     'a': 1\n* };\n* var o2 = {\n*     'b': 2\n* };\n* var o3 = {\n*     'c': 3\n* };\n*\n* var bool = indexed( [ o1, o2, o3 ], 'b' );\n* // returns true\n*\n* bool = indexed( [ o1, o2, o3 ], 'd' );\n* // returns false\n*\n* bool = indexed( [ o1, o2, o3 ], 'toString' );\n* // returns true\n*/\nfunction indexed( arr, prop ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( hasProp( arr[ i ], prop ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n* Tests whether at least one element in a provided accessor array has a specified property, either own or inherited.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {(string|symbol)} prop - property\n* @returns {boolean} result\n*\n* @example\n* import toAccessorArray from '@stdlib/array-base-to-accessor-array';\n*\n* var o1 = {\n*     'a': 1\n* };\n* var o2 = {\n*     'b': 2\n* };\n* var o3 = {\n*     'c': 3\n* };\n*\n* var bool = accessors( toAccessorArray( [ o1, o2, o3 ] ), 'b' );\n* // returns true\n*\n* bool = accessors( toAccessorArray( [ o1, o2, o3 ] ), 'd' );\n* // returns false\n*\n* bool = accessors( toAccessorArray( [ o1, o2, o3 ] ), 'toString' );\n* // returns true\n*/\nfunction accessors( arr, prop ) {\n\tvar get;\n\tvar i;\n\n\tget = resolveGetter( arr );\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( hasProp( get( arr, i ), prop ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in a provided array has a specified property, either own or inherited.\n*\n* @param {Collection} arr - input array\n* @param {(string|symbol)} prop - property\n* @returns {boolean} result\n*\n* @example\n* var o1 = {\n*     'a': 1\n* };\n* var o2 = {\n*     'b': 2\n* };\n* var o3 = {\n*     'c': 3\n* };\n*\n* var bool = anyHasProp( [ o1, o2, o3 ], 'b' );\n* // returns true\n*\n* bool = anyHasProp( [ o1, o2, o3 ], 'd' );\n* // returns false\n*\n* bool = anyHasProp( [ o1, o2, o3 ], 'toString' );\n* // returns true\n*/\nfunction anyHasProp( arr, prop ) {\n\tif ( isAccessorArray( arr ) ) {\n\t\treturn accessors( arr, prop );\n\t}\n\treturn indexed( arr, prop );\n}\n\n\n// EXPORTS //\n\nexport default anyHasProp;\n"],"names":["anyHasProp","arr","prop","isAccessorArray","get","i","resolveGetter","length","hasProp","accessors","indexed"],"mappings":";;gTA4IA,SAASA,EAAYC,EAAKC,GACzB,OAAKC,EAAiBF,GA5CvB,SAAoBA,EAAKC,GACxB,IAAIE,EACAC,EAGJ,IADAD,EAAME,EAAeL,GACfI,EAAI,EAAGA,EAAIJ,EAAIM,OAAQF,IAC5B,GAAKG,EAASJ,EAAKH,EAAKI,GAAKH,GAC5B,OAAO,EAGT,OAAO,CACR,CAkCSO,CAAWR,EAAKC,GArFzB,SAAkBD,EAAKC,GACtB,IAAIG,EACJ,IAAMA,EAAI,EAAGA,EAAIJ,EAAIM,OAAQF,IAC5B,GAAKG,EAASP,EAAKI,GAAKH,GACvB,OAAO,EAGT,OAAO,CACR,CA+EQQ,CAAST,EAAKC,EACtB"}